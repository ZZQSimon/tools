<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd
       http://cxf.apache.org/jaxws
       http://cxf.apache.org/schemas/jaxws.xsd
       http://cxf.apache.org/jaxrs
       http://cxf.apache.org/schemas/jaxrs.xsd">
	<context:property-placeholder location="META-INF/timeTask.properties" />
	<bean id="timeTaskProperties" class="com.gainit.g1.core.timedTask.TimeTaskProperties">
		<property name="isExec" value="${isExec}"></property>
		<property name="domain" value="${domain}"></property>
	</bean>
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="maxUploadSize" value="10485760"/> </bean> -->
	<import resource="classpath*:META-INF/cxf/cxf.xml" />
	<import resource="classpath*:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath*:META-INF/cxf/cxf-servlet.xml" />
	<!-- <jaxws:endpoint id="DXServiceCXF" implementor="com.gainit.g1.module.japi.webServiceCXF.DXServiceCXF" 
		address="/DXServiceCXF" /> -->
	<bean id="DXServiceCXF" class="com.gainit.g1.module.japi.webServiceCXF.DXServiceCXF" />

	<jaxrs:server id="rs_server" address="/rs">
		<jaxrs:serviceBeans>
			<ref bean="DXServiceCXF" />
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<bean id="messageSource" class="com.gainit.g1.core.TextResolver" />
	<!--data source settings -->
	<bean id="masterDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/dbpool" />
		<property name="expectedType" value="javax.sql.DataSource" />
	</bean>
	<bean id="routingDataSource" class="com.gainit.g1.core.master.DxRoutingDataSource">
		<property name="active_flag" value="1" />
		<property name="defaultDataSourceDriver" value="com.mysql.jdbc.Driver" />
	</bean>
	<!-- bean scan setting -->
	<context:component-scan base-package="com.gainit.g1">
	</context:component-scan>
	<!-- system dao settings -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="routingDataSource" />
	</bean>
	<bean id="txTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="routingDataSource" />
		<property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
		<!-- sql执行拦截器 -->
		<!--<property name="mapperLocations" value="classpath:com/gainit/g1/DeployTool/dao/*.xml" 
			/> -->
		<property name="plugins">
			<array>
				<bean id="sqlStatementInterceptor"
					class="com.gainit.g1.DeployTool.sqlInterceptor.SqlStatementInterceptor">
				</bean>
			</array>
		</property>
	</bean>
	<bean id="persistenceExceptionTranslator"
		class="com.gainit.g1.core.exception.PersistenceExceptionTranslator">
		<constructor-arg index="0" ref="routingDataSource" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" />
		<constructor-arg index="2"
			ref="persistenceExceptionTranslator" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.gainit.g1.core.dao, com.gainit.g1.module.**.dao ,com.gainit.g1.DeployTool.dao" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean>

	<!-- master dao settings -->
	<bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="masterDataSource" />
	</bean>
	<bean id="masterSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="masterSqlSessionFactory" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gainit.g1.core.master" />
		<property name="sqlSessionTemplateBeanName" value="masterSqlSessionTemplate" />
	</bean>

	<!-- velocity settings -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity" />
		<property name="configLocation" value="classpath:velocity.properties" />
	</bean>
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml" />
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="order" value="1" />
	</bean>
	<bean
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="prefix" value="/cn/com/easyerp/module/velocity/" />
		<property name="suffix" value=".vm" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml" />
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="order" value="2" />
	</bean>
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<!--<bean class="com.gainit.g1.core.formatter.DateFormatter"/> -->
			</set>
		</property>
	</bean>
	<bean id="objectMapper"
		class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<!--<property name="serializationInclusion" value="NON_NULL"/> -->
		<property name="serializers">
			<array>
				<bean class="com.gainit.g1.core.serializer.ClobSerializer" />
				<bean class="com.gainit.g1.core.serializer.DateSerializer" />
			</array>
		</property>
		<!-- enable javascript style parse -->
		<property name="featuresToEnable">
			<array>
				<util:constant
					static-field="com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES" />
				<util:constant
					static-field="com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_SINGLE_QUOTES" />
			</array>
		</property>
	</bean>
	<mvc:resources mapping="/**"
		location="/, classpath:/cn/com/easyerp/module/resource/" />
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:message-converters register-defaults="false">
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="objectMapper" />
			</bean>
		</mvc:message-converters>
		<mvc:argument-resolvers>
			<bean class="com.gainit.g1.auth.CurrentUserHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	<mvc:interceptors>
		<bean class="com.gainit.g1.core.HandlerInterceptor" />
	</mvc:interceptors>

	<bean id="dxScheduler" class="com.gainit.g1.core.schedule.DxTaskScheduler"
		destroy-method="destroy" />
	<task:annotation-driven scheduler="dxScheduler" />
	<import resource="classpath*:com/gainit/g1/module/**/dx-spring-*.xml" />

	<!-- redis -->
	<!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> -->
	<!--</bean> -->

	<!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
	<!--<property name="hostName" value="localhost" /> -->
	<!--<property name="port" value="6379" /> -->
	<!--<property name="password" value="****"/> -->
	<!--<property name="usePool" value="true"/> -->
	<!--<property name="poolConfig" ref="jedisPoolConfig"/> -->
	<!--</bean> -->

	<!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> -->
	<!--<property name="connectionFactory" ref="jedisConnectionFactory"/> -->
	<!--</bean> -->

	<!--&lt;!&ndash; 将session放入redis &ndash;&gt; -->
	<!--<bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"> -->
	<!--<property name="maxInactiveIntervalInSeconds" value="1800"/> -->
	<!--</bean> -->
</beans>