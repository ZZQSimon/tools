<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/task  
    http://www.springframework.org/schema/task/spring-task-3.2.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.g1extend" />
	<!-- 开启注解 -->
	<mvc:annotation-driven />
	<!-- 配置任务扫描 -->
	<task:annotation-driven />
	<!-- 配置扫描任务位置 -->
	<context:component-scan base-package="com.g1extend.task" />

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/html/**" location="/html/" />


	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/html/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<bean id="globalHandlerExceptionResolver" class="com.g1extend.global.GlobalHandlerExceptionResolver" />

	<!-- 第三步：注册处理器映射器/处理器适配器 ，添加conversion-service属性 -->
	<mvc:annotation-driven conversion-service="conversionService" />

	<!-- 第二步： 创建convertion-Service ，并注入dateConvert -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="dateConvert" />
			</set>
		</property>
	</bean>
	<!-- 第一步: 创建自定义日期转换规则 -->
	<bean id="dateConvert" class="com.g1extend.utils.DateConvert" />
</beans>
